import java.util.function.Consumer

plugins {
	id "fabric-loom" version "0.5-SNAPSHOT"
	id "maven-publish"
}

repositories {
	maven { url "https://jitpack.io" }
	jcenter()
}

class Version {
	String yarn_mappings;
	String loader_version;
	String fabric_version;
	Consumer dependencies;

	Version(String yarn_mappings, String loader_version, String fabric_version, Consumer dependencies) {
		this.yarn_mappings = yarn_mappings;
		this.loader_version = loader_version;
		this.fabric_version = fabric_version;

		this.dependencies = dependencies;
	}
}

def versions = [
		"1.16.1": new Version("1.16.1+build.21", "0.10.6+build.214", "0.18.0+build.387-1.16.1", {
			project ->
				project.modCompile "com.google.code.findbugs:jsr305:3.0.2"
				project.modApi("me.shedaniel.cloth:config-2:4.8.1") {
					exclude(group: "net.fabricmc.fabric-api")
				}

				project.modImplementation("io.github.prospector:modmenu:1.14.6+build.31") {
					exclude module: "fabric-api"
				}

				project.include "me.shedaniel.cloth:config-2:4.8.1"
		}),
		"1.16.2": new Version("1.16.2+build.47", "0.9.3+build.207", "0.21.0+build.407-1.16", {
			project ->
				project.modCompile "com.google.code.findbugs:jsr305:3.0.2"
				project.modApi("me.shedaniel.cloth:config-2:4.8.1") {
					exclude(group: "net.fabricmc.fabric-api")
				}

				project.modImplementation("io.github.prospector:modmenu:1.14.6+build.31") {
					exclude module: "fabric-api"
				}

				project.include "me.shedaniel.cloth:config-2:4.8.1"
		}),
		"1.16.3": new Version("1.16.3+build.17", "0.10.0+build.208", "0.22.1+build.409-1.16", {
			project ->
				project.modCompile "com.google.code.findbugs:jsr305:3.0.2"
				project.modApi("me.shedaniel.cloth:config-2:4.8.1") {
					exclude(group: "net.fabricmc.fabric-api")
				}

				project.modImplementation("io.github.prospector:modmenu:1.14.6+build.31") {
					exclude module: "fabric-api"
				}

				project.include "me.shedaniel.cloth:config-2:4.8.1"
		}),
		"1.16.4": new Version("1.16.4+build.7", "0.10.8", "0.26.0+1.16", {
			project ->
				project.modCompile "com.google.code.findbugs:jsr305:3.0.2"
				project.modApi("me.shedaniel.cloth:config-2:4.8.1") {
					exclude(group: "net.fabricmc.fabric-api")
				}

				project.modImplementation("io.github.prospector:modmenu:1.14.6+build.31") {
					exclude module: "fabric-api"
				}

				project.include "me.shedaniel.cloth:config-2:4.8.1"

				// replace OptiFabric:<version> with latest version on https://www.curseforge.com/minecraft/mc-mods/optifabric/files that fits your MC version
				project.modCompile "com.github.Chocohead:OptiFabric:llama-SNAPSHOT"

				//Deps required for optifabric
				project.compile "org.zeroturnaround:zt-zip:1.14"
		}),
		"1.16.5": new Version("1.16.5+build.4", "0.11.1", "0.30.0+1.16", {
			project ->
				project.modCompile "com.google.code.findbugs:jsr305:3.0.2"
				project.modApi("me.shedaniel.cloth:config-2:4.8.1") {
					exclude(group: "net.fabricmc.fabric-api")
				}

				project.modImplementation("io.github.prospector:modmenu:1.14.6+build.31") {
					exclude module: "fabric-api"
				}

				project.include "me.shedaniel.cloth:config-2:4.8.1"
		})
		//
//                mappings      : [
//                        "net/orandja/shoukatweaks/mixin/RebuildTaskMixin": [
//                                "render": "Lnet/minecraft/class_846\$class_851\$class_4578;method_22785(FFFLnet/minecraft/class_846\$class_849;Lnet/minecraft/class_750;)Ljava/util/Set;"
//                        ]
//                ],
]

archivesBaseName = "pacifist-mobs"
group = "net.orandja"
version = "0.0.1"
def suffix = ""
def selectedVersion = '1.16.5'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


minecraft {
}

dependencies {
	//to change the versions see the gradle.properties file

	minecraft "com.mojang:minecraft:${selectedVersion}"
	mappings "net.fabricmc:yarn:${versions.get(selectedVersion).yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${versions.get(selectedVersion).loader_version}"
	modCompile "net.fabricmc.fabric-api:fabric-api:${versions.get(selectedVersion).fabric_version}"

	versions.get(selectedVersion).dependencies.accept(it);
	//versions.get(selectedVersion).get("dependencies")();
}

build {
	archivesBaseName = archivesBaseName + "-" + selectedVersion + suffix
}

processResources {
	inputs.property "version", selectedVersion

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": selectedVersion
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}